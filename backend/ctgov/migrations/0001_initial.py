# Generated by Django 3.2 on 2021-04-22 03:10

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AllBrowseConditions",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nct_id", models.TextField(blank=True, null=True)),
                ("names", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "all_browse_conditions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AllBrowseInterventions",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nct_id", models.TextField(blank=True, null=True)),
                ("names", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "all_browse_interventions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AllCities",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nct_id", models.TextField(blank=True, null=True)),
                ("names", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "all_cities",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AllConditions",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nct_id", models.TextField(blank=True, null=True)),
                ("names", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "all_conditions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AllCountries",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nct_id", models.TextField(blank=True, null=True)),
                ("names", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "all_countries",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AllDesignOutcomes",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nct_id", models.TextField(blank=True, null=True)),
                ("names", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "all_design_outcomes",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AllFacilities",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nct_id", models.TextField(blank=True, null=True)),
                ("names", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "all_facilities",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AllGroupTypes",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nct_id", models.TextField(blank=True, null=True)),
                ("names", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "all_group_types",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AllIdInformation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nct_id", models.TextField(blank=True, null=True)),
                ("names", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "all_id_information",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AllInterventions",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nct_id", models.TextField(blank=True, null=True)),
                ("names", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "all_interventions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AllInterventionTypes",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nct_id", models.TextField(blank=True, null=True)),
                ("names", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "all_intervention_types",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AllKeywords",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nct_id", models.TextField(blank=True, null=True)),
                ("names", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "all_keywords",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AllOverallOfficialAffiliations",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nct_id", models.TextField(blank=True, null=True)),
                ("names", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "all_overall_official_affiliations",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AllOverallOfficials",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nct_id", models.TextField(blank=True, null=True)),
                ("names", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "all_overall_officials",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AllPrimaryOutcomeMeasures",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nct_id", models.TextField(blank=True, null=True)),
                ("names", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "all_primary_outcome_measures",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AllSecondaryOutcomeMeasures",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nct_id", models.TextField(blank=True, null=True)),
                ("names", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "all_secondary_outcome_measures",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AllSponsors",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nct_id", models.TextField(blank=True, null=True)),
                ("names", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "all_sponsors",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AllStates",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nct_id", models.TextField(blank=True, null=True)),
                ("names", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "all_states",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AnalyzedStudies",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("nct_id", models.TextField(blank=True, null=True)),
                ("url", models.TextField(blank=True, null=True)),
                ("brief_title", models.TextField(blank=True, null=True)),
                ("start_month", models.TextField(blank=True, null=True)),
                ("start_year", models.IntegerField(blank=True, null=True)),
                ("overall_status", models.TextField(blank=True, null=True)),
                (
                    "p_completion_month",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "p_completion_year",
                    models.IntegerField(blank=True, null=True),
                ),
                ("completion_month", models.TextField(blank=True, null=True)),
                (
                    "completion_year",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "verification_month",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "verification_year",
                    models.IntegerField(blank=True, null=True),
                ),
                ("p_comp_mn", models.IntegerField(blank=True, null=True)),
                ("p_comp_yr", models.IntegerField(blank=True, null=True)),
                ("received_year", models.IntegerField(blank=True, null=True)),
                ("mntopcom", models.IntegerField(blank=True, null=True)),
                ("enrollment", models.IntegerField(blank=True, null=True)),
                ("number_of_arms", models.IntegerField(blank=True, null=True)),
                ("allocation", models.TextField(blank=True, null=True)),
                ("masking", models.TextField(blank=True, null=True)),
                ("phase", models.TextField(blank=True, null=True)),
                ("primary_purpose", models.TextField(blank=True, null=True)),
                ("sponsor_name", models.TextField(blank=True, null=True)),
                ("agency_class", models.TextField(blank=True, null=True)),
                (
                    "collaborator_names",
                    models.TextField(blank=True, null=True),
                ),
                ("funding", models.TextField(blank=True, null=True)),
                (
                    "responsible_party_type",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "responsible_party_organization",
                    models.TextField(blank=True, null=True),
                ),
                ("us_coderc", models.TextField(blank=True, null=True)),
                ("oversight", models.TextField(blank=True, null=True)),
                ("behavioral", models.TextField(blank=True, null=True)),
                ("biological", models.TextField(blank=True, null=True)),
                ("device", models.TextField(blank=True, null=True)),
                ("dietsup", models.TextField(blank=True, null=True)),
                ("drug", models.TextField(blank=True, null=True)),
                ("genetic", models.TextField(blank=True, null=True)),
                ("procedure", models.TextField(blank=True, null=True)),
                ("radiation", models.TextField(blank=True, null=True)),
                ("otherint", models.TextField(blank=True, null=True)),
                ("intervg1", models.TextField(blank=True, null=True)),
                ("results", models.TextField(blank=True, null=True)),
                (
                    "resultsreceived_month",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "resultsreceived_year",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "firstreceived_results_dt",
                    models.DateField(blank=True, null=True),
                ),
                ("t2result", models.IntegerField(blank=True, null=True)),
                ("t2result_imp", models.IntegerField(blank=True, null=True)),
                ("t2resmod", models.IntegerField(blank=True, null=True)),
                ("results12", models.TextField(blank=True, null=True)),
                ("delayed", models.TextField(blank=True, null=True)),
                ("dr_received_dt", models.DateField(blank=True, null=True)),
                ("mn2delay", models.BooleanField(blank=True, null=True)),
                ("delayed12", models.BooleanField(blank=True, null=True)),
            ],
            options={
                "db_table": "analyzed_studies",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="BaselineCounts",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ctgov_group_code", models.TextField(blank=True, null=True)),
                ("units", models.TextField(blank=True, null=True)),
                ("scope", models.TextField(blank=True, null=True)),
                ("count", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "baseline_counts",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="BaselineMeasurements",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ctgov_group_code", models.TextField(blank=True, null=True)),
                ("classification", models.TextField(blank=True, null=True)),
                ("category", models.TextField(blank=True, null=True)),
                ("title", models.TextField(blank=True, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("units", models.TextField(blank=True, null=True)),
                ("param_type", models.TextField(blank=True, null=True)),
                ("param_value", models.TextField(blank=True, null=True)),
                (
                    "param_value_num",
                    models.DecimalField(
                        blank=True,
                        decimal_places=65535,
                        max_digits=65535,
                        null=True,
                    ),
                ),
                ("dispersion_type", models.TextField(blank=True, null=True)),
                ("dispersion_value", models.TextField(blank=True, null=True)),
                (
                    "dispersion_value_num",
                    models.DecimalField(
                        blank=True,
                        decimal_places=65535,
                        max_digits=65535,
                        null=True,
                    ),
                ),
                (
                    "dispersion_lower_limit",
                    models.DecimalField(
                        blank=True,
                        decimal_places=65535,
                        max_digits=65535,
                        null=True,
                    ),
                ),
                (
                    "dispersion_upper_limit",
                    models.DecimalField(
                        blank=True,
                        decimal_places=65535,
                        max_digits=65535,
                        null=True,
                    ),
                ),
                ("explanation_of_na", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "baseline_measurements",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="BriefSummaries",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "brief_summaries",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="BrowseConditions",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("mesh_term", models.TextField(blank=True, null=True)),
                (
                    "downcase_mesh_term",
                    models.TextField(blank=True, null=True),
                ),
            ],
            options={
                "db_table": "browse_conditions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="BrowseInterventions",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("mesh_term", models.TextField(blank=True, null=True)),
                (
                    "downcase_mesh_term",
                    models.TextField(blank=True, null=True),
                ),
            ],
            options={
                "db_table": "browse_interventions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CalculatedValues",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "number_of_facilities",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "number_of_nsae_subjects",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "number_of_sae_subjects",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "registered_in_calendar_year",
                    models.IntegerField(blank=True, null=True),
                ),
                ("nlm_download_date", models.DateField(blank=True, null=True)),
                (
                    "actual_duration",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "were_results_reported",
                    models.BooleanField(blank=True, null=True),
                ),
                (
                    "months_to_report_results",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "has_us_facility",
                    models.BooleanField(blank=True, null=True),
                ),
                (
                    "has_single_facility",
                    models.BooleanField(blank=True, null=True),
                ),
                (
                    "minimum_age_num",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "maximum_age_num",
                    models.IntegerField(blank=True, null=True),
                ),
                ("minimum_age_unit", models.TextField(blank=True, null=True)),
                ("maximum_age_unit", models.TextField(blank=True, null=True)),
                (
                    "number_of_primary_outcomes_to_measure",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "number_of_secondary_outcomes_to_measure",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "number_of_other_outcomes_to_measure",
                    models.IntegerField(blank=True, null=True),
                ),
            ],
            options={
                "db_table": "calculated_values",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CardiovascularStudies",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("nct_id", models.TextField(blank=True, null=True)),
                ("brief_title", models.TextField(blank=True, null=True)),
                ("lead_sponsor", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "cardiovascular_studies",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Categories",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField(max_length=-1)),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
                ("grouping", models.TextField(max_length=-1)),
                (
                    "study_search_id",
                    models.IntegerField(blank=True, null=True),
                ),
            ],
            options={
                "db_table": "categories",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CdekOrganizations",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("name", models.TextField(blank=True, null=True)),
                ("downcase_name", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "cdek_organizations",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CdekSynonyms",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("name", models.TextField(blank=True, null=True)),
                ("preferred_name", models.TextField(blank=True, null=True)),
                ("downcase_name", models.TextField(blank=True, null=True)),
                (
                    "downcase_preferred_name",
                    models.TextField(blank=True, null=True),
                ),
            ],
            options={
                "db_table": "cdek_synonyms",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CentralContacts",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("contact_type", models.TextField(blank=True, null=True)),
                ("name", models.TextField(blank=True, null=True)),
                ("phone", models.TextField(blank=True, null=True)),
                ("email", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "central_contacts",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Conditions",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField(blank=True, null=True)),
                ("downcase_name", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "conditions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Countries",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField(blank=True, null=True)),
                ("removed", models.BooleanField(blank=True, null=True)),
            ],
            options={
                "db_table": "countries",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Covid19Studies",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nct_id", models.TextField(blank=True, null=True)),
                ("overall_status", models.TextField(blank=True, null=True)),
                ("study_type", models.TextField(blank=True, null=True)),
                ("official_title", models.TextField(blank=True, null=True)),
                ("acronym", models.TextField(blank=True, null=True)),
                ("phase", models.TextField(blank=True, null=True)),
                ("why_stopped", models.TextField(blank=True, null=True)),
                ("has_dmc", models.BooleanField(blank=True, null=True)),
                ("enrollment", models.IntegerField(blank=True, null=True)),
                (
                    "is_fda_regulated_device",
                    models.BooleanField(blank=True, null=True),
                ),
                (
                    "is_fda_regulated_drug",
                    models.BooleanField(blank=True, null=True),
                ),
                (
                    "is_unapproved_device",
                    models.BooleanField(blank=True, null=True),
                ),
                (
                    "has_expanded_access",
                    models.BooleanField(blank=True, null=True),
                ),
                (
                    "study_first_submitted_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "last_update_posted_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "results_first_posted_date",
                    models.DateField(blank=True, null=True),
                ),
                ("start_date", models.DateField(blank=True, null=True)),
                (
                    "primary_completion_date",
                    models.DateField(blank=True, null=True),
                ),
                ("completion_date", models.DateField(blank=True, null=True)),
                (
                    "study_first_posted_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "number_of_facilities",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "has_single_facility",
                    models.BooleanField(blank=True, null=True),
                ),
                ("nlm_download_date", models.DateField(blank=True, null=True)),
                ("number_of_arms", models.IntegerField(blank=True, null=True)),
                (
                    "number_of_groups",
                    models.IntegerField(blank=True, null=True),
                ),
                ("lead_sponsor", models.TextField(blank=True, null=True)),
                ("other_ids", models.TextField(blank=True, null=True)),
                ("gender", models.TextField(blank=True, null=True)),
                ("gender_based", models.BooleanField(blank=True, null=True)),
                (
                    "gender_description",
                    models.TextField(blank=True, null=True),
                ),
                ("population", models.TextField(blank=True, null=True)),
                ("minimum_age", models.TextField(blank=True, null=True)),
                ("maximum_age", models.TextField(blank=True, null=True)),
                ("criteria", models.TextField(blank=True, null=True)),
                (
                    "healthy_volunteers",
                    models.TextField(blank=True, null=True),
                ),
                ("keywords", models.TextField(blank=True, null=True)),
                ("interventions", models.TextField(blank=True, null=True)),
                ("conditions", models.TextField(blank=True, null=True)),
                ("primary_purpose", models.TextField(blank=True, null=True)),
                ("allocation", models.TextField(blank=True, null=True)),
                (
                    "observational_model",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "intervention_model",
                    models.TextField(blank=True, null=True),
                ),
                ("masking", models.TextField(blank=True, null=True)),
                ("subject_masked", models.BooleanField(blank=True, null=True)),
                (
                    "caregiver_masked",
                    models.BooleanField(blank=True, null=True),
                ),
                (
                    "investigator_masked",
                    models.BooleanField(blank=True, null=True),
                ),
                (
                    "outcomes_assessor_masked",
                    models.BooleanField(blank=True, null=True),
                ),
                ("design_outcomes", models.TextField(blank=True, null=True)),
                ("brief_summary", models.TextField(blank=True, null=True)),
                (
                    "detailed_description",
                    models.TextField(blank=True, null=True),
                ),
            ],
            options={
                "db_table": "covid_19_studies",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DesignGroupInterventions",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "db_table": "design_group_interventions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DesignGroups",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("group_type", models.TextField(blank=True, null=True)),
                ("title", models.TextField(blank=True, null=True)),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "design_groups",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DesignOutcomes",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("outcome_type", models.TextField(blank=True, null=True)),
                ("measure", models.TextField(blank=True, null=True)),
                ("time_frame", models.TextField(blank=True, null=True)),
                ("population", models.TextField(blank=True, null=True)),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "design_outcomes",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Designs",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("allocation", models.TextField(blank=True, null=True)),
                (
                    "intervention_model",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "observational_model",
                    models.TextField(blank=True, null=True),
                ),
                ("primary_purpose", models.TextField(blank=True, null=True)),
                ("time_perspective", models.TextField(blank=True, null=True)),
                ("masking", models.TextField(blank=True, null=True)),
                (
                    "masking_description",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "intervention_model_description",
                    models.TextField(blank=True, null=True),
                ),
                ("subject_masked", models.BooleanField(blank=True, null=True)),
                (
                    "caregiver_masked",
                    models.BooleanField(blank=True, null=True),
                ),
                (
                    "investigator_masked",
                    models.BooleanField(blank=True, null=True),
                ),
                (
                    "outcomes_assessor_masked",
                    models.BooleanField(blank=True, null=True),
                ),
            ],
            options={
                "db_table": "designs",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DetailedDescriptions",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "detailed_descriptions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Documents",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("document_id", models.TextField(blank=True, null=True)),
                ("document_type", models.TextField(blank=True, null=True)),
                ("url", models.TextField(blank=True, null=True)),
                ("comment", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "documents",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DropWithdrawals",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ctgov_group_code", models.TextField(blank=True, null=True)),
                ("period", models.TextField(blank=True, null=True)),
                ("reason", models.TextField(blank=True, null=True)),
                ("count", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "drop_withdrawals",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Eligibilities",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sampling_method", models.TextField(blank=True, null=True)),
                ("gender", models.TextField(blank=True, null=True)),
                ("minimum_age", models.TextField(blank=True, null=True)),
                ("maximum_age", models.TextField(blank=True, null=True)),
                (
                    "healthy_volunteers",
                    models.TextField(blank=True, null=True),
                ),
                ("population", models.TextField(blank=True, null=True)),
                ("criteria", models.TextField(blank=True, null=True)),
                (
                    "gender_description",
                    models.TextField(blank=True, null=True),
                ),
                ("gender_based", models.BooleanField(blank=True, null=True)),
            ],
            options={
                "db_table": "eligibilities",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Facilities",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("status", models.TextField(blank=True, null=True)),
                ("name", models.TextField(blank=True, null=True)),
                ("city", models.TextField(blank=True, null=True)),
                ("state", models.TextField(blank=True, null=True)),
                ("zip", models.TextField(blank=True, null=True)),
                ("country", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "facilities",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FacilityContacts",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("contact_type", models.TextField(blank=True, null=True)),
                ("name", models.TextField(blank=True, null=True)),
                ("email", models.TextField(blank=True, null=True)),
                ("phone", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "facility_contacts",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FacilityInvestigators",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("role", models.TextField(blank=True, null=True)),
                ("name", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "facility_investigators",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="IdInformation",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("id_type", models.TextField(blank=True, null=True)),
                ("id_value", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "id_information",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="InterventionOtherNames",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "intervention_other_names",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Interventions",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("intervention_type", models.TextField(blank=True, null=True)),
                ("name", models.TextField(blank=True, null=True)),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "interventions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="IpdInformationTypes",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "ipd_information_types",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Keywords",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField(blank=True, null=True)),
                ("downcase_name", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "keywords",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Links",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("url", models.TextField(blank=True, null=True)),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "links",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MentalHealthStudies",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("nct_id", models.TextField(blank=True, null=True)),
                ("brief_title", models.TextField(blank=True, null=True)),
                ("lead_sponsor", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "mental_health_studies",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MeshHeadings",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("qualifier", models.TextField(blank=True, null=True)),
                ("heading", models.TextField(blank=True, null=True)),
                ("subcategory", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "mesh_headings",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MeshTerms",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("qualifier", models.TextField(blank=True, null=True)),
                ("tree_number", models.TextField(blank=True, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("mesh_term", models.TextField(blank=True, null=True)),
                (
                    "downcase_mesh_term",
                    models.TextField(blank=True, null=True),
                ),
            ],
            options={
                "db_table": "mesh_terms",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Milestones",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ctgov_group_code", models.TextField(blank=True, null=True)),
                ("title", models.TextField(blank=True, null=True)),
                ("period", models.TextField(blank=True, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("count", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "milestones",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OncologyStudies",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("nct_id", models.TextField(blank=True, null=True)),
                ("brief_title", models.TextField(blank=True, null=True)),
                ("lead_sponsor", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "oncology_studies",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OutcomeAnalyses",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "non_inferiority_type",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "non_inferiority_description",
                    models.TextField(blank=True, null=True),
                ),
                ("param_type", models.TextField(blank=True, null=True)),
                (
                    "param_value",
                    models.DecimalField(
                        blank=True,
                        decimal_places=65535,
                        max_digits=65535,
                        null=True,
                    ),
                ),
                ("dispersion_type", models.TextField(blank=True, null=True)),
                (
                    "dispersion_value",
                    models.DecimalField(
                        blank=True,
                        decimal_places=65535,
                        max_digits=65535,
                        null=True,
                    ),
                ),
                ("p_value_modifier", models.TextField(blank=True, null=True)),
                ("p_value", models.FloatField(blank=True, null=True)),
                ("ci_n_sides", models.TextField(blank=True, null=True)),
                (
                    "ci_percent",
                    models.DecimalField(
                        blank=True,
                        decimal_places=65535,
                        max_digits=65535,
                        null=True,
                    ),
                ),
                (
                    "ci_lower_limit",
                    models.DecimalField(
                        blank=True,
                        decimal_places=65535,
                        max_digits=65535,
                        null=True,
                    ),
                ),
                (
                    "ci_upper_limit",
                    models.DecimalField(
                        blank=True,
                        decimal_places=65535,
                        max_digits=65535,
                        null=True,
                    ),
                ),
                (
                    "ci_upper_limit_na_comment",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "p_value_description",
                    models.TextField(blank=True, null=True),
                ),
                ("method", models.TextField(blank=True, null=True)),
                (
                    "method_description",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "estimate_description",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "groups_description",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "other_analysis_description",
                    models.TextField(blank=True, null=True),
                ),
            ],
            options={
                "db_table": "outcome_analyses",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OutcomeAnalysisGroups",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ctgov_group_code", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "outcome_analysis_groups",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OutcomeCounts",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ctgov_group_code", models.TextField(blank=True, null=True)),
                ("scope", models.TextField(blank=True, null=True)),
                ("units", models.TextField(blank=True, null=True)),
                ("count", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "outcome_counts",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OutcomeMeasurements",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ctgov_group_code", models.TextField(blank=True, null=True)),
                ("classification", models.TextField(blank=True, null=True)),
                ("category", models.TextField(blank=True, null=True)),
                ("title", models.TextField(blank=True, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("units", models.TextField(blank=True, null=True)),
                ("param_type", models.TextField(blank=True, null=True)),
                ("param_value", models.TextField(blank=True, null=True)),
                (
                    "param_value_num",
                    models.DecimalField(
                        blank=True,
                        decimal_places=65535,
                        max_digits=65535,
                        null=True,
                    ),
                ),
                ("dispersion_type", models.TextField(blank=True, null=True)),
                ("dispersion_value", models.TextField(blank=True, null=True)),
                (
                    "dispersion_value_num",
                    models.DecimalField(
                        blank=True,
                        decimal_places=65535,
                        max_digits=65535,
                        null=True,
                    ),
                ),
                (
                    "dispersion_lower_limit",
                    models.DecimalField(
                        blank=True,
                        decimal_places=65535,
                        max_digits=65535,
                        null=True,
                    ),
                ),
                (
                    "dispersion_upper_limit",
                    models.DecimalField(
                        blank=True,
                        decimal_places=65535,
                        max_digits=65535,
                        null=True,
                    ),
                ),
                ("explanation_of_na", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "outcome_measurements",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Outcomes",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("outcome_type", models.TextField(blank=True, null=True)),
                ("title", models.TextField(blank=True, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("time_frame", models.TextField(blank=True, null=True)),
                ("population", models.TextField(blank=True, null=True)),
                (
                    "anticipated_posting_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "anticipated_posting_month_year",
                    models.TextField(blank=True, null=True),
                ),
                ("units", models.TextField(blank=True, null=True)),
                ("units_analyzed", models.TextField(blank=True, null=True)),
                ("dispersion_type", models.TextField(blank=True, null=True)),
                ("param_type", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "outcomes",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OverallOfficials",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("role", models.TextField(blank=True, null=True)),
                ("name", models.TextField(blank=True, null=True)),
                ("affiliation", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "overall_officials",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ParticipantFlows",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "recruitment_details",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "pre_assignment_details",
                    models.TextField(blank=True, null=True),
                ),
            ],
            options={
                "db_table": "participant_flows",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PendingResults",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("event", models.TextField(blank=True, null=True)),
                (
                    "event_date_description",
                    models.TextField(blank=True, null=True),
                ),
                ("event_date", models.DateField(blank=True, null=True)),
            ],
            options={
                "db_table": "pending_results",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ProvidedDocuments",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("document_type", models.TextField(blank=True, null=True)),
                ("has_protocol", models.BooleanField(blank=True, null=True)),
                ("has_icf", models.BooleanField(blank=True, null=True)),
                ("has_sap", models.BooleanField(blank=True, null=True)),
                ("document_date", models.DateField(blank=True, null=True)),
                ("url", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "provided_documents",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ReportedEvents",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ctgov_group_code", models.TextField(blank=True, null=True)),
                ("time_frame", models.TextField(blank=True, null=True)),
                ("event_type", models.TextField(blank=True, null=True)),
                ("default_vocab", models.TextField(blank=True, null=True)),
                (
                    "default_assessment",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "subjects_affected",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "subjects_at_risk",
                    models.IntegerField(blank=True, null=True),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("event_count", models.IntegerField(blank=True, null=True)),
                ("organ_system", models.TextField(blank=True, null=True)),
                (
                    "adverse_event_term",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "frequency_threshold",
                    models.IntegerField(blank=True, null=True),
                ),
                ("vocab", models.TextField(blank=True, null=True)),
                ("assessment", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "reported_events",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ReportedEventTotals",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ctgov_group_code", models.TextField(max_length=-1)),
                ("event_type", models.TextField(blank=True, null=True)),
                ("classification", models.TextField(max_length=-1)),
                (
                    "subjects_affected",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "subjects_at_risk",
                    models.IntegerField(blank=True, null=True),
                ),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "reported_event_totals",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ResponsibleParties",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "responsible_party_type",
                    models.TextField(blank=True, null=True),
                ),
                ("name", models.TextField(blank=True, null=True)),
                ("title", models.TextField(blank=True, null=True)),
                ("organization", models.TextField(blank=True, null=True)),
                ("affiliation", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "responsible_parties",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ResultAgreements",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pi_employee", models.TextField(blank=True, null=True)),
                ("agreement", models.TextField(blank=True, null=True)),
                ("restriction_type", models.TextField(blank=True, null=True)),
                ("other_details", models.TextField(blank=True, null=True)),
                (
                    "restrictive_agreement",
                    models.TextField(blank=True, null=True),
                ),
            ],
            options={
                "db_table": "result_agreements",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ResultContacts",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("organization", models.TextField(blank=True, null=True)),
                ("name", models.TextField(blank=True, null=True)),
                ("phone", models.TextField(blank=True, null=True)),
                ("email", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "result_contacts",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ResultGroups",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ctgov_group_code", models.TextField(blank=True, null=True)),
                ("result_type", models.TextField(blank=True, null=True)),
                ("title", models.TextField(blank=True, null=True)),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "result_groups",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SearchStudies",
            fields=[
                ("status", models.TextField(blank=True, null=True)),
                ("brief_title", models.TextField(blank=True, null=True)),
                ("official_title", models.TextField(blank=True, null=True)),
                (
                    "nct_id",
                    models.TextField(primary_key=True, serialize=False),
                ),
                ("condition_name", models.TextField(blank=True, null=True)),
                (
                    "study_detailed_desc",
                    models.TextField(blank=True, null=True),
                ),
                ("country_name", models.TextField(blank=True, null=True)),
                ("intervention_name", models.TextField(blank=True, null=True)),
                ("keywords", models.TextField(blank=True, null=True)),
                (
                    "eligibility_criteria",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "eligibility_gender",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "eligibility_min_age",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "eligibility_min_age_numeric",
                    models.DecimalField(
                        blank=True,
                        decimal_places=65535,
                        max_digits=65535,
                        null=True,
                    ),
                ),
                (
                    "eligibility_max_age",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "eligibility_max_age_numeric",
                    models.DecimalField(
                        blank=True,
                        decimal_places=65535,
                        max_digits=65535,
                        null=True,
                    ),
                ),
                (
                    "healthy_volunteers",
                    models.TextField(blank=True, null=True),
                ),
                ("location_name", models.TextField(blank=True, null=True)),
                ("study_brief_desc", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "search_studies",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Sponsors",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("agency_class", models.TextField(blank=True, null=True)),
                (
                    "lead_or_collaborator",
                    models.TextField(blank=True, null=True),
                ),
                ("name", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "sponsors",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Studies",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nct_id",
                    models.TextField(blank=True, null=True, unique=True),
                ),
                (
                    "nlm_download_date_description",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "study_first_submitted_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "results_first_submitted_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "disposition_first_submitted_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "last_update_submitted_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "study_first_submitted_qc_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "study_first_posted_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "study_first_posted_date_type",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "results_first_submitted_qc_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "results_first_posted_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "results_first_posted_date_type",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "disposition_first_submitted_qc_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "disposition_first_posted_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "disposition_first_posted_date_type",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "last_update_submitted_qc_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "last_update_posted_date",
                    models.DateField(blank=True, null=True),
                ),
                (
                    "last_update_posted_date_type",
                    models.TextField(blank=True, null=True),
                ),
                ("start_month_year", models.TextField(blank=True, null=True)),
                ("start_date_type", models.TextField(blank=True, null=True)),
                ("start_date", models.DateField(blank=True, null=True)),
                (
                    "verification_month_year",
                    models.TextField(blank=True, null=True),
                ),
                ("verification_date", models.DateField(blank=True, null=True)),
                (
                    "completion_month_year",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "completion_date_type",
                    models.TextField(blank=True, null=True),
                ),
                ("completion_date", models.DateField(blank=True, null=True)),
                (
                    "primary_completion_month_year",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "primary_completion_date_type",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "primary_completion_date",
                    models.DateField(blank=True, null=True),
                ),
                ("target_duration", models.TextField(blank=True, null=True)),
                ("study_type", models.TextField(blank=True, null=True)),
                ("acronym", models.TextField(blank=True, null=True)),
                (
                    "baseline_population",
                    models.TextField(blank=True, null=True),
                ),
                ("brief_title", models.TextField(blank=True, null=True)),
                ("official_title", models.TextField(blank=True, null=True)),
                ("overall_status", models.TextField(blank=True, null=True)),
                ("last_known_status", models.TextField(blank=True, null=True)),
                ("phase", models.TextField(blank=True, null=True)),
                ("enrollment", models.IntegerField(blank=True, null=True)),
                ("enrollment_type", models.TextField(blank=True, null=True)),
                ("source", models.TextField(blank=True, null=True)),
                (
                    "limitations_and_caveats",
                    models.TextField(blank=True, null=True),
                ),
                ("number_of_arms", models.IntegerField(blank=True, null=True)),
                (
                    "number_of_groups",
                    models.IntegerField(blank=True, null=True),
                ),
                ("why_stopped", models.TextField(blank=True, null=True)),
                (
                    "has_expanded_access",
                    models.BooleanField(blank=True, null=True),
                ),
                (
                    "expanded_access_type_individual",
                    models.BooleanField(blank=True, null=True),
                ),
                (
                    "expanded_access_type_intermediate",
                    models.BooleanField(blank=True, null=True),
                ),
                (
                    "expanded_access_type_treatment",
                    models.BooleanField(blank=True, null=True),
                ),
                ("has_dmc", models.BooleanField(blank=True, null=True)),
                (
                    "is_fda_regulated_drug",
                    models.BooleanField(blank=True, null=True),
                ),
                (
                    "is_fda_regulated_device",
                    models.BooleanField(blank=True, null=True),
                ),
                (
                    "is_unapproved_device",
                    models.BooleanField(blank=True, null=True),
                ),
                ("is_ppsd", models.BooleanField(blank=True, null=True)),
                ("is_us_export", models.BooleanField(blank=True, null=True)),
                ("biospec_retention", models.TextField(blank=True, null=True)),
                (
                    "biospec_description",
                    models.TextField(blank=True, null=True),
                ),
                ("ipd_time_frame", models.TextField(blank=True, null=True)),
                (
                    "ipd_access_criteria",
                    models.TextField(blank=True, null=True),
                ),
                ("ipd_url", models.TextField(blank=True, null=True)),
                ("plan_to_share_ipd", models.TextField(blank=True, null=True)),
                (
                    "plan_to_share_ipd_description",
                    models.TextField(blank=True, null=True),
                ),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "studies",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="StudyReferences",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pmid", models.TextField(blank=True, null=True)),
                ("reference_type", models.TextField(blank=True, null=True)),
                ("citation", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "study_references",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="StudySearches",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("save_tsv", models.BooleanField()),
                ("query", models.TextField(max_length=-1)),
                ("grouping", models.TextField(max_length=-1)),
                ("name", models.TextField(max_length=-1)),
                ("beta_api", models.BooleanField()),
                ("created_at", models.DateTimeField()),
                ("updated_at", models.DateTimeField()),
            ],
            options={
                "db_table": "study_searches",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TaggedTerms",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("tag", models.TextField(blank=True, null=True)),
                ("term", models.TextField(blank=True, null=True)),
                ("term_type", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "tagged_terms",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Y2010MeshTerms",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("qualifier", models.TextField(blank=True, null=True)),
                ("tree_number", models.TextField(blank=True, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("mesh_term", models.TextField(blank=True, null=True)),
                (
                    "downcase_mesh_term",
                    models.TextField(blank=True, null=True),
                ),
            ],
            options={
                "db_table": "y2010_mesh_terms",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Y2016MeshHeadings",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("qualifier", models.TextField(blank=True, null=True)),
                ("heading", models.TextField(blank=True, null=True)),
                ("subcategory", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "y2016_mesh_headings",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Y2016MeshTerms",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("qualifier", models.TextField(blank=True, null=True)),
                ("tree_number", models.TextField(blank=True, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("mesh_term", models.TextField(blank=True, null=True)),
                (
                    "downcase_mesh_term",
                    models.TextField(blank=True, null=True),
                ),
            ],
            options={
                "db_table": "y2016_mesh_terms",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Y2018MeshTerms",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("qualifier", models.TextField(blank=True, null=True)),
                ("tree_number", models.TextField(blank=True, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("mesh_term", models.TextField(blank=True, null=True)),
                (
                    "downcase_mesh_term",
                    models.TextField(blank=True, null=True),
                ),
            ],
            options={
                "db_table": "y2018_mesh_terms",
                "managed": False,
            },
        ),
    ]
