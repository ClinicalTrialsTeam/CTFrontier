version: "3.8"

services:
  react:
    build: ./frontend
    container_name: react
    command: /bin/bash -c "npm update --legacy-peer-deps && npm start"
    volumes:
      - ./frontend:/app/frontend
      - node-modules:/app/frontend/node_modules
    ports:
      - 3000:3000
  django:
    build: ./backend
    container_name: django
    working_dir: /usr/src/app
    volumes:
      - ./backend:/usr/src/app
    command: /bin/bash -c "pip-compile --quiet && pip install -r requirements.txt -q && python manage.py migrate && pip list && python manage.py runserver 0.0.0.0:8000"
    ports:
      - 8000:8000
    depends_on:
      - elasticsearch
      - pgdb
  pgdb:
    env_file:
      - ./backend/core/.env
    image: postgres
    container_name: pgdb
    shm_size: 1g
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD={DB_PASSWORD}
    volumes:
      - ./data/:/data
      - pgdata:/var/lib/postgresql/data/
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.2
    container_name: es01
    restart: always
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - xpack.security.enabled=false
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - elsdata:/usr/share/elasticsearch/data
    networks:
      - elastic
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.11.2
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    networks:
      - elastic

volumes:
  pgdata:
    driver: local
  elsdata:
    driver: local
  node-modules:
    driver: local

networks:
  elastic:
    driver: bridge
